networks:
  server_network:
    name: server_network
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
        - subnet: 2001:db8:1::/64

services:
  # Healthcheck is done by dockerfile itself
  blocky:
    image: spx01/blocky:latest
    container_name: blocky
    hostname: blocky
    user: "1000:1000"
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./blocky/config.yml:/app/config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blocky.rule=Host(`blocky.lan`)"
      - "traefik.http.services.blocky.loadbalancer.server.port=4000"
    environment:
      - TZ=${TZ}

  # Needs to run as root
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    networks:
      server_network:
        ipv4_address: ${TRAEFIK_IPV4}
        ipv6_address: ${TRAEFIK_IPV6}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro # static traefik configuration
    environment:
      - TZ=${TZ}
    depends_on:
      blocky:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lan`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
      start_period: 10s
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - host.docker.internal:172.17.0.1
