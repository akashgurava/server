services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    networks:
      server_network:
        ipv4_address: 172.18.0.21
        ipv6_address: 2001:db8:1::21
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"

  # Needs to run as root
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    networks:
      server_network:
        ipv4_address: 172.18.0.11
        ipv6_address: 2001:db8:1::12
    volumes:
      - ${PROMETHEUS_DATA_PATH}:/prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
    healthcheck:
      test: [ "CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9090/-/healthy" ]
      start_period: 1s
      interval: 30s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    hostname: grafana
    user: "1000:1000"
    restart: unless-stopped
    networks:
      server_network:
        ipv4_address: 172.18.0.31
        ipv6_address: 2001:db8:1::31
    ports:
      - "3000:3000"
    volumes:
      - ${GRAFANA_DATA_PATH}:/var/lib/grafana
    healthcheck:
      test: [ "CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:3000/api/health" ]
      start_period: 10s
      interval: 30s
      timeout: 5s
      retries: 3
